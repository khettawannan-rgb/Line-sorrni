<!-- project-root/src/views/dashboard.ejs -->
<% const fmtCount = (val) => Number(val || 0).toLocaleString('th-TH'); %>
<% const fmtTons = (val, opts = {}) => Number(val || 0).toLocaleString('th-TH', { minimumFractionDigits: opts.min ?? 0, maximumFractionDigits: opts.max ?? 2 }); %>
<% const isLitreProduct = (name = '', unit = '') => /‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡πÄ‡∏ï‡∏≤/i.test(String(name)) || /‡∏•‡∏¥‡∏ï‡∏£/.test(String(unit)); %>
<% const formatQuantity = (name, unit, tons) => {
     const liter = isLitreProduct(name, unit);
     const value = liter ? Number(tons || 0) * 1000 : Number(tons || 0);
     const decimals = liter ? 0 : 2;
     return {
       value,
       unit: liter ? '‡∏•‡∏¥‡∏ï‡∏£' : '‡∏ï‡∏±‡∏ô',
       formatted: Number(value || 0).toLocaleString('th-TH', {
         minimumFractionDigits: 0,
         maximumFractionDigits: decimals,
       }),
     };
   }; %>
<% const summaryTimestamp = new Date().toLocaleString('th-TH', { dateStyle: 'medium', timeStyle: 'short' }); %>
<% const provinceDataJSON = JSON.stringify(provinceMap || []); %>
<% const provinceTopList = Array.isArray(provinceMapTop) ? provinceMapTop : []; %>
<% const provinceStats = provinceMapStats || { totalLocations: 0, uniqueUsers: 0, totalProvinces: 0, provincesWithCoords: 0, lastUpdatedAt: null }; %>
<% const hasProvinceCoords = Number(provinceStats.provincesWithCoords || 0) > 0; %>
<% const chatStats = chatUserStats || { active7d: 0, new7d: 0, returning7d: 0, active30d: 0, totalUsers: 0, messages7d: 0, messagesTotal: 0 }; %>
<% const consentTotals = consentStatusSummary || {}; %>
<% const chatTrendJSON = JSON.stringify(chatTrend || []); %>
<% const chatTopicTopJSON = JSON.stringify((chat.topicSummary || []).slice(0, 5)); %>
<% const consentStatusJSON = JSON.stringify(consentTotals); %>
<% const behavior =
     (typeof dashboardBehavior !== 'undefined' && dashboardBehavior !== null)
       ? dashboardBehavior
       : (locals.dashboardBehavior || {}); %>
<% const interactionSeries = behavior.timeSeries || chatTrend || []; %>
<% const interactionSeriesJSON = JSON.stringify(interactionSeries); %>
<% const heatmapJSON = JSON.stringify(behavior.heatmap || []); %>
<% const sentimentTrendJSON = JSON.stringify(behavior.sentimentTrend || []); %>
<% const intentStackJSON = JSON.stringify(behavior.intentDistribution || []); %>
<% const keywordCloudJSON = JSON.stringify(behavior.keywordCloud || []); %>
<% const sentimentCloudJSON = JSON.stringify(behavior.sentimentWordCloud || { positive: [], negative: [] }); %>
<% const funnelJSON = JSON.stringify(behavior.conversionFunnel || []); %>
<% const agentResponseJSON = JSON.stringify(behavior.agentResponse || []); %>
<% const agentLeaderboard = behavior.agentLeaderboard || []; %>
<% const topCustomers = behavior.topCustomers || []; %>
<% const retentionJSON = JSON.stringify(behavior.retentionCohorts || []); %>
<% const churnList = behavior.churnRisks || []; %>
<% const anomalyList = behavior.anomalies || []; %>
<% const networkJSON = JSON.stringify(behavior.networkGraph || { nodes: [], links: [] }); %>
<% const filters = behavior.filters || {}; %>
<% const logicModules = behavior.logicModules || [
     { name: 'Intent Classification', description: 'Classify each message into inquiry/order/complaint etc.', query: 'POST /nlp/intent -> intents collection update' },
     { name: 'Sentiment Analysis', description: 'Thai language polarity + strength using finetuned model', query: 'db.chat_messages.updateOne({_id}, {$set:{sentiment_label,...}})' },
     { name: 'Entity Extraction', description: 'Product/PO/location/date extraction with NER+regex', query: 'SELECT entity, type FROM message_entities WHERE message_id=?' },
     { name: 'User Profiling', description: 'RFM-like metrics per user', query: 'INSERT INTO user_profiles (user_id, recency_days, frequency_30d, avg_msg_len)...' },
     { name: 'Engagement Scoring', description: 'Score f(message frequency, session length, sentiment)', query: 'db.users.updateOne({_id:user_id}, {$set:{engagement_score:score}})' },
     { name: 'Response Efficiency', description: 'First reply time + SLA tracking', query: 'SELECT AVG(first_reply_seconds) FROM agent_metrics' },
     { name: 'Conversation Clustering', description: 'Topic modeling with BERTopic/HDBSCAN', query: 'INSERT INTO conversation_topics (conversation_id, cluster_id)' },
     { name: 'Churn Prediction', description: 'Predict inactivity risk', query: 'UPDATE users SET churn_score=? WHERE user_id=?' },
     { name: 'Next Best Action', description: 'Rule/ML recommended action', query: 'INSERT INTO nba_recommendations (user_id, action, reason)' },
     { name: 'Anomaly Detection', description: 'Detect spikes using rolling z-score', query: 'INSERT INTO anomalies (date, metric, delta_sigma)' },
   ]; %>

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-sA+e2jXUgXu3kGEXHOIa0GpCCMbnYIY01tZ5JfL0z0k="
  crossorigin="" />
<script
  src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-o9N1j7kC3U1JzDvsPWVn0AqfZbG9JQIvIDi64tT0+3s="
  crossorigin=""></script>

<style>
  .dashboard-tabs {
    display: flex;
    gap: 12px;
    margin: 1.5rem 0 0;
    border-bottom: 1px solid rgba(15, 23, 42, 0.08);
    padding-bottom: 0.75rem;
  }
  .dashboard-tabs button {
    border: none;
    background: #f1f5f9;
    color: #0f172a;
    font-weight: 600;
    padding: 0.5rem 1.25rem;
    border-radius: 999px;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  .dashboard-tabs button:hover {
    background: #e2e8f0;
  }
  .dashboard-tabs button.is-active {
    background: #1d4ed8;
    color: #ffffff;
    box-shadow: 0 6px 18px rgba(29, 78, 216, 0.25);
  }
  .dashboard-tab-hidden {
    display: none !important;
  }
  @media (max-width: 960px) {
    .dashboard-tabs {
      flex-wrap: wrap;
      gap: 8px;
    }
    .dashboard-tabs button {
      flex: 1 0 auto;
    }
  }
</style>
<style>
  .insight-filters {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 12px;
    padding: 1rem;
    margin-bottom: 1.5rem;
    border-radius: 16px;
  }
  .insight-filters label {
    font-size: 0.75rem;
    text-transform: uppercase;
    color: #475569;
    display: block;
    margin-bottom: 4px;
  }
  .insight-filters select,
  .insight-filters input {
    width: 100%;
    padding: 0.45rem 0.6rem;
    border-radius: 10px;
    border: 1px solid rgba(15, 23, 42, 0.12);
  }
  .insight-filters .filter-actions {
    display: flex;
    gap: 8px;
    align-items: flex-end;
  }
  .row-kpi {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 16px;
    margin-bottom: 1.5rem;
  }
  .metric-definitions {
    margin-bottom: 1.5rem;
  }
  .metric-definitions summary {
    cursor: pointer;
    font-weight: 600;
  }
  .metric-definitions ul {
    margin: 0.5rem 0 0;
    padding-left: 1rem;
    color: #475569;
  }
  .insight-row {
    display: grid;
    gap: 16px;
    margin-bottom: 1.5rem;
  }
  .insight-row.row-timeseries {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }
  .insight-row.row-intents,
  .insight-row.row-agent,
  .insight-row.row-retention {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }
  .insight-table-grid.row-legacy {
    margin-top: 2rem;
  }
  .keyword-card,
  .sentiment-cloud {
    min-height: 280px;
  }
  .sentiment-cloud-wrap {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 12px;
    padding: 1rem;
  }
  .logic-list ol {
    margin-left: 1.2rem;
    line-height: 1.4;
  }
  .logic-list pre {
    background: #0f172a;
    color: #f8fafc;
    padding: 0.5rem 0.75rem;
    border-radius: 10px;
    overflow-x: auto;
    font-size: 0.75rem;
  }
  .logic-card pre code {
    display: block;
    white-space: pre-wrap;
  }
  .drilldown-hint {
    margin-top: -0.75rem;
    margin-bottom: 1.5rem;
    font-size: 0.8rem;
    color: #64748b;
  }
  .checklist-columns {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 16px;
    margin-top: 1rem;
  }
  .checklist-columns ul {
    list-style: none;
    padding: 0;
    margin: 0;
    line-height: 1.5;
  }
</style>

<div class="dashboard-shell dashboard-light">
  <aside class="dashboard-sidebar">
    <div class="sidebar-brand">
      <div class="sidebar-logo">
        <img src="/static/img/sorni.png" alt="Sorni" />
      </div>
      <span class="sidebar-title">Sorni</span>
    </div>
    <nav class="sidebar-nav">
      <a href="#overview" class="active">
        <span class="icon">üè†</span>
        <span>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</span>
      </a>
      <a href="#excel">
        <span class="icon">üì¶</span>
        <span>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
      </a>
      <a href="#companies">
        <span class="icon">üè¢</span>
        <span>‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</span>
      </a>
      <a href="#customer-insights" data-tab-jump="behavior">
        <span class="icon">üí¨</span>
        <span>‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</span>
      </a>
      <a href="#tools">
        <span class="icon">üõ†Ô∏è</span>
        <span>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠</span>
      </a>
    </nav>
    <div class="sidebar-meta">
      <span>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</span>
      <strong><%= summaryTimestamp %></strong>
    </div>
    <div class="sidebar-footer">
      <p>‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå</p>
    </div>
  </aside>

  <div class="dashboard-main">
    <header class="dashboard-top" id="overview" data-dashboard-section="core behavior classic">
      <div>
        <h1>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</h1>
        <p>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ</p>
      </div>
      <div class="top-actions">
        <div class="top-search">
          <span class="icon">üîç</span>
          <input type="search" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó" />
        </div>
        <button class="btn btn-pill">‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</button>
      </div>
    </header>

    <section class="dashboard-tabs">
      <button type="button" class="is-active" data-dashboard-tab="core">‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å</button>
      <button type="button" data-dashboard-tab="behavior">‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</button>
      <button type="button" data-dashboard-tab="classic">‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏° (‡∏™‡∏≥‡∏£‡∏≠‡∏á)</button>
    </section>

    <section class="panel-block panel-insights" id="customer-insights" data-dashboard-section="behavior classic">
      <div class="panel-heading">
        <div>
          <h2>Customer Insights</h2>
          <p>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å LINE Official Account</p>
        </div>
        <div class="insight-meta">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 14 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</div>
      </div>
      <div class="panel-body insight-body" data-behavior-root>
        <form class="insight-filters glass">
          <div>
            <label>‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤</label>
            <select name="dateRange">
              <% (filters.dateRanges || ['7d','14d','30d','90d','custom']).forEach(range => { %>
                <option value="<%= range %>"><%= range.toUpperCase() %></option>
              <% }) %>
            </select>
          </div>
          <div>
            <label>Channel</label>
            <select name="channel">
              <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <% (filters.channels || ['1-1','group','portal']).forEach(ch => { %>
                <option value="<%= ch %>"><%= ch %></option>
              <% }) %>
            </select>
          </div>
          <div>
            <label>Project</label>
            <select name="project">
              <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <% (filters.projects || []).forEach(project => { %>
                <option value="<%= project %>"><%= project %></option>
              <% }) %>
            </select>
          </div>
          <div>
            <label>Customer Code</label>
            <input type="text" name="customer_code" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" />
          </div>
          <div>
            <label>Agent</label>
            <select name="agent">
              <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <% (filters.agents || []).forEach(agent => { %>
                <option value="<%= agent.id || agent %>"><%= agent.name || agent %></option>
              <% }) %>
            </select>
          </div>
          <div>
            <label>Intent</label>
            <select name="intent">
              <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <% (filters.intents || []).forEach(intent => { %>
                <option value="<%= intent %>"><%= intent %></option>
              <% }) %>
            </select>
          </div>
          <div>
            <label>Sentiment</label>
            <select name="sentiment">
              <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <option value="positive">Positive</option>
              <option value="neutral">Neutral</option>
              <option value="negative">Negative</option>
            </select>
          </div>
          <div class="filter-actions">
            <button type="submit" class="btn btn-pill">Apply</button>
            <button type="button" class="btn btn-ghost" data-export="json">Export JSON</button>
            <button type="button" class="btn btn-ghost" data-export="csv">Export CSV</button>
          </div>
        </form>
        <p class="muted drilldown-hint">* ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π conversations ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏õ‡∏¥‡∏î transcript / ERP / CRM (action wired ‡∏ú‡πà‡∏≤‡∏ô data-drilldown attributes).</p>

        <div class="insight-metrics row-kpi">
          <article class="metric-card primary">
            <span class="metric-label">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Active (7 ‡∏ß‡∏±‡∏ô)</span>
            <div class="metric-value"><%= fmtCount(chatStats.active7d) %><span>‡∏Ñ‡∏ô</span></div>
            <span class="metric-sub">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î <%= fmtCount(chatStats.totalUsers) %> ‡∏Ñ‡∏ô</span>
          </article>
          <article class="metric-card">
            <span class="metric-label">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà (7 ‡∏ß‡∏±‡∏ô)</span>
            <div class="metric-value"><%= fmtCount(chatStats.new7d) %><span>‡∏Ñ‡∏ô</span></div>
            <span class="metric-sub"><%= chatStats.active7d ? ((chatStats.new7d / Math.max(chatStats.active7d, 1)) * 100).toFixed(1) : '0.0' %>% ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà active</span>
          </article>
          <article class="metric-card">
            <span class="metric-label">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤</span>
            <div class="metric-value"><%= fmtCount(chatStats.returning7d) %><span>‡∏Ñ‡∏ô</span></div>
            <span class="metric-sub">‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô</span>
          </article>
          <article class="metric-card">
            <span class="metric-label">‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (7 ‡∏ß‡∏±‡∏ô)</span>
            <div class="metric-value"><%= fmtCount(chatStats.messages7d) %><span>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</span></div>
            <span class="metric-sub">‡∏™‡∏∞‡∏™‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î <%= fmtCount(chatStats.messagesTotal) %> ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</span>
          </article>
        </div>
        <details class="metric-definitions">
          <summary>Metric Definitions</summary>
          <ul>
            <li><strong>Active Users (7d)</strong> = COUNT(DISTINCT user_id) WHERE message_ts &ge; (CURRENT_DATE - INTERVAL '7 day')</li>
            <li><strong>Returning Users</strong> = Active 7d AND EXISTS message between 8‚Äì30 days ago</li>
            <li><strong>First Reply Time</strong> = MIN(agent_ts) - MIN(user_ts) per conversation</li>
            <li><strong>SLA%</strong> = conversations WHERE first_reply_time &le; SLA target √∑ total conversations</li>
            <li><strong>Retention</strong> = returning_users / cohort_users per week offset</li>
            <li><strong>Churn Risk</strong> = gap &gt; 2√ó median gap OR last 3 sentiments &le; 0</li>
          </ul>
        </details>
        <div class="insight-row row-timeseries">
          <div class="card glass insight-chart full" data-chart-trend='<%- interactionSeriesJSON %>' data-drilldown="interaction-volume">
            <div class="card-heading">
              <h3>‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤/‡∏≠‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô</h3>
              <span class="muted">‡∏™‡∏•‡∏±‡∏ö‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á 7 / 14 / 30 / 90 ‡∏ß‡∏±‡∏ô</span>
            </div>
            <div class="chart-frame">
              <canvas id="chat-trend-chart" height="240"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT date::date AS d,
SUM(CASE WHEN direction='in' THEN 1 ELSE 0 END) AS inbound,
SUM(CASE WHEN direction='out' THEN 1 ELSE 0 END) AS outbound
FROM fact_chat_message
WHERE timestamp BETWEEN $start AND $end
GROUP BY 1 ORDER BY 1</code>
            </footer>
          </div>
          <div class="card glass insight-chart" data-heatmap='<%- heatmapJSON %>' data-drilldown="keyword-intent-heatmap">
            <div class="card-heading">
              <h3>Heatmap ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h3>
              <span class="muted">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö hour √ó weekday</span>
            </div>
            <div class="chart-frame">
              <canvas id="chat-heatmap-chart" height="240"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT EXTRACT(DOW FROM timestamp) AS dow,
EXTRACT(HOUR FROM timestamp) AS hour,
COUNT(*) AS volume
FROM fact_chat_message
WHERE timestamp BETWEEN $start AND $end
GROUP BY 1,2</code>
            </footer>
          </div>
          <div class="card glass insight-chart" data-sentiment='<%- sentimentTrendJSON %>' data-drilldown="sentiment-trend">
            <div class="card-heading">
              <h3>Sentiment Distribution &amp; Trend</h3>
              <span class="muted">Pie + 14-day mini trend</span>
            </div>
            <div class="chart-frame sentiment">
              <canvas id="sentiment-pie-chart" height="180"></canvas>
              <canvas id="sentiment-mini-chart" height="80"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT sentiment_label,
COUNT(*) AS cnt,
AVG(sentiment_score) AS avg_score
FROM fact_chat_message
WHERE timestamp BETWEEN $start AND $end
GROUP BY 1</code>
            </footer>
          </div>
        </div>

        <div class="insight-row row-intents">
          <div class="card glass insight-chart" data-intent-stack='<%- intentStackJSON %>' data-drilldown="intent-distribution">
            <div class="card-heading">
              <h3>Intent Distribution</h3>
              <span class="muted">‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô Inquiry / Order / Complaint / ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</span>
            </div>
            <div class="chart-frame">
              <canvas id="intent-stack-chart" height="260"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT week_start, intent_category, COUNT(*) FROM fact_chat_message GROUP BY 1,2</code>
            </footer>
          </div>
          <div class="card glass keyword-card" data-keyword-cloud='<%- keywordCloudJSON %>' data-drilldown="top-keywords">
            <div class="card-heading">
              <h3>Top Keywords Cloud</h3>
              <span class="muted">N-grams (stopwords removed)</span>
            </div>
            <div class="chart-frame keyword">
              <canvas id="keyword-cloud" height="260"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT keyword, SUM(weight) AS score
FROM keyword_stats
WHERE period='current'
GROUP BY 1 ORDER BY score DESC LIMIT 200</code>
            </footer>
          </div>
          <div class="card glass insight-chart" data-consent-status='<%- consentStatusJSON %>' data-drilldown="consent-status">
            <div class="card-heading">
              <h3>Consent Status</h3>
              <span class="muted">Granted / Pending / Revoked</span>
            </div>
            <div class="chart-frame">
              <canvas id="consent-status-chart" height="240"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT latest_status, COUNT(*) FROM consent_audit_latest GROUP BY 1</code>
            </footer>
          </div>
          <div class="card glass sentiment-cloud" data-sentiment-cloud='<%- sentimentCloudJSON %>' data-drilldown="sentiment-wordcloud">
            <div class="card-heading">
              <h3>Word Clouds ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏° Sentiment</h3>
            </div>
            <div class="sentiment-cloud-wrap">
              <div>
                <h4>Positive</h4>
                <canvas id="sentiment-cloud-positive" height="140"></canvas>
              </div>
              <div>
                <h4>Negative</h4>
                <canvas id="sentiment-cloud-negative" height="140"></canvas>
              </div>
            </div>
            <footer class="card-foot">
              <code>SELECT term, SUM(weight) FROM sentiment_terms WHERE sentiment='positive'</code>
            </footer>
          </div>
        </div>

        <div class="insight-row row-agent">
          <div class="card glass funnel-card" data-funnel='<%- funnelJSON %>' data-drilldown="conversion-funnel">
            <div class="card-heading">
              <h3>Conversion Funnel</h3>
              <span class="muted">Inquiry ‚Üí Quote ‚Üí PO ‚Üí Payment ‚Üí Delivered</span>
            </div>
            <div class="chart-frame">
              <canvas id="conversion-funnel-chart" height="260"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT stage, COUNT(*) FROM conversion_events
WHERE event_ts BETWEEN $start AND $end
GROUP BY stage ORDER BY stage_order</code>
            </footer>
          </div>
          <div class="card glass insight-chart" data-agent-response='<%- agentResponseJSON %>' data-drilldown="agent-response">
            <div class="card-heading">
              <h3>Agent Response Time</h3>
              <span class="muted">Avg / Median / P90 + SLA Target</span>
            </div>
            <div class="chart-frame">
              <canvas id="agent-response-chart" height="260"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT agent_id,
AVG(first_reply_sec) AS avg,
PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY first_reply_sec) AS median,
PERCENTILE_CONT(0.9) WITHIN GROUP(...) AS p90,
AVG(CASE WHEN first_reply_sec &lt;= 300 THEN 1 ELSE 0 END) AS sla_pct
FROM agent_metrics
WHERE week_start BETWEEN $start AND $end
GROUP BY agent_id</code>
            </footer>
          </div>
          <div class="card glass" data-drilldown="agent-performance-table">
            <div class="card-heading">
              <h3>Agent Leaderboard</h3>
              <span class="muted">‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° SLA% ‡πÅ‡∏•‡∏∞ Sentiment</span>
            </div>
            <div class="table-scroll">
              <table class="table compact ghost">
                <thead>
                  <tr>
                    <th>Agent</th>
                    <th class="right">Conversations</th>
                    <th class="right">First Reply (avg)</th>
                    <th class="right">SLA%</th>
                    <th class="right">Avg Sentiment</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (agentLeaderboard.length) { %>
                    <% agentLeaderboard.forEach(agent => { %>
                      <tr>
                        <td><strong><%= agent.name || agent.agent_id %></strong></td>
                        <td class="right"><%= fmtCount(agent.conversationCount) %></td>
                        <td class="right"><%= (agent.avgFirstReplySec || 0).toFixed(1) %>s</td>
                        <td class="right"><%= ((agent.slaPct || 0) * 100).toFixed(1) %>%</td>
                        <td class="right"><%= (agent.avgSentiment || 0).toFixed(2) %></td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå</td></tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <div class="insight-row row-engagement">
          <div class="card glass" data-drilldown="customer-engagement">
            <div class="card-heading">
              <h3>Top Customers by Engagement</h3>
              <span class="muted">Ranking ‡πÇ‡∏î‡∏¢ Frequency ¬∑ Sessions ¬∑ Sentiment</span>
            </div>
            <div class="table-scroll">
              <table class="table compact ghost">
                <thead>
                  <tr>
                    <th>Customer</th>
                    <th class="right">Messages</th>
                    <th class="right">Sessions</th>
                    <th class="right">Avg Sentiment</th>
                    <th class="right">Engagement Score</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (topCustomers.length) { %>
                    <% topCustomers.forEach(c => { %>
                      <tr>
                        <td><strong><%= c.displayName || c.user_id %></strong></td>
                        <td class="right"><%= fmtCount(c.messageCount) %></td>
                        <td class="right"><%= fmtCount(c.sessionCount) %></td>
                        <td class="right"><%= (c.sentimentAvg || 0).toFixed(2) %></td>
                        <td class="right"><%= (c.engagementScore || 0).toFixed(1) %></td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• engagement</td></tr>
                  <% } %>
                </tbody>
              </table>
            </div>
            <footer class="card-foot">
              <code>SELECT user_id,
COUNT(*) AS messages,
COUNT(DISTINCT conversation_id) AS sessions,
AVG(sentiment_score) AS avg_sentiment,
engagement_score
FROM user_daily_metrics
WHERE date BETWEEN $start AND $end
ORDER BY engagement_score DESC LIMIT 20</code>
            </footer>
          </div>
        </div>

        <div class="insight-row row-retention">
          <div class="card glass insight-chart" data-retention='<%- retentionJSON %>' data-drilldown="retention-cohort">
            <div class="card-heading">
              <h3>Retention Cohort</h3>
              <span class="muted">Cohort ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</span>
            </div>
            <div class="chart-frame">
              <canvas id="retention-cohort-chart" height="260"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT cohort_week, week_offset, returning_users/total_users AS rate
FROM retention_cohorts</code>
            </footer>
          </div>
          <div class="card glass" data-drilldown="churn-risk">
            <div class="card-heading">
              <h3>Churn Risk (Top 10)</h3>
              <span class="muted">‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° &gt; 2√ó median ‡∏´‡∏£‡∏∑‡∏≠ sentiment ‡∏ï‡∏¥‡∏î‡∏•‡∏ö</span>
            </div>
            <div class="table-scroll">
              <table class="table compact ghost">
                <thead>
                  <tr>
                    <th>User</th>
                    <th>Last Seen</th>
                    <th>Gap (days)</th>
                    <th>Sentiment Trend</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (churnList.length) { %>
                    <% churnList.forEach(item => { %>
                      <tr>
                        <td><strong><%= item.displayName || item.user_id %></strong></td>
                        <td><%= item.lastSeen ? new Date(item.lastSeen).toLocaleDateString('th-TH') : '-' %></td>
                        <td class="right"><%= (item.gapDays || 0).toFixed(1) %></td>
                        <td class="right"><%= (item.sentimentTrend || 0).toFixed(2) %></td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr><td colspan="4" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á churn</td></tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
          <div class="card glass" data-drilldown="anomaly-alerts">
            <div class="card-heading">
              <h3>Escalation &amp; Complaint Alerts</h3>
              <span class="muted">‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö negativity spike</span>
            </div>
            <div class="table-scroll">
              <table class="table compact ghost">
                <thead>
                  <tr>
                    <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                    <th>Metric</th>
                    <th>Œî Sigma</th>
                    <th>Keyword</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (anomalyList.length) { %>
                    <% anomalyList.forEach(alert => { %>
                      <tr>
                        <td><%= alert.date ? new Date(alert.date).toLocaleDateString('th-TH') : '-' %></td>
                        <td><strong><%= alert.metric %></strong></td>
                        <td class="right"><%= (alert.deltaSigma || 0).toFixed(2) %></td>
                        <td><%= alert.keyword || '-' %></td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr><td colspan="4" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥</td></tr>
                  <% } %>
                </tbody>
              </table>
            </div>
            <footer class="card-foot">
              <code>INSERT INTO anomalies(date, metric, delta_sigma)
SELECT day, 'complaints', z_score
FROM complaint_spike_detector</code>
            </footer>
          </div>
        </div>

        <div class="insight-row row-network">
          <div class="card glass network-card" data-network='<%- networkJSON %>' data-drilldown="customer-agent-network">
            <div class="card-heading">
              <h3>Customer ‚Üî Agent Network</h3>
              <span class="muted">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤</span>
            </div>
            <div class="chart-frame">
              <canvas id="network-graph" height="340"></canvas>
            </div>
            <footer class="card-foot">
              <code>SELECT user_id, agent_id, COUNT(*) AS conversations
FROM fact_conversation
WHERE first_agent_reply_ts IS NOT NULL
GROUP BY 1,2</code>
            </footer>
          </div>
        </div>

        <div class="insight-table-grid row-legacy">
          <div class="card glass">
            <div class="card-heading">
              <h3>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</h3>
            </div>
            <div class="table-scroll">
              <table class="table compact ghost">
                <thead>
                  <tr>
                    <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                    <th class="right">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                  </tr>
                </thead>
                <tbody>
                  <% const msgKeys = Object.keys(chat.messageTypeCount || {}); %>
                  <% msgKeys.forEach(key => { %>
                    <tr>
                      <td><%= key %></td>
                      <td class="right"><%= fmtCount(chat.messageTypeCount[key]) %></td>
                    </tr>
                  <% }) %>
                  <% if (!msgKeys.length) { %>
                    <tr><td colspan="2" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ä‡∏ó</td></tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>

          <div class="card glass">
            <div class="card-heading">
              <h3>‡∏´‡∏°‡∏ß‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î</h3>
            </div>
            <div class="table-scroll">
              <table class="table compact ghost">
                <thead>
                  <tr>
                    <th>‡∏´‡∏°‡∏ß‡∏î</th>
                    <th class="right">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                    <th>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</th>
                  </tr>
                </thead>
                <tbody>
                  <% (chat.topicSummary || []).forEach(item => { %>
                    <tr>
                      <td><strong><%= item.label %></strong></td>
                      <td class="right"><%= fmtCount(item.count) %></td>
                      <td>
                        <% (item.samples || []).forEach(sample => { %>
                          <div class="muted">‚Ä¢ <%= sample %></div>
                        <% }) %>
                      </td>
                    </tr>
                  <% }) %>
                  <% if (!chat.topicSummary || chat.topicSummary.length === 0) { %>
                    <tr><td colspan="3" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå</td></tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>

          <div class="card glass">
            <div class="card-heading">
              <h3>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h3>
            </div>
            <div class="table-scroll">
              <table class="table compact ghost">
                <thead>
                  <tr>
                    <th>Display Name</th>
                    <th>userId</th>
                    <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                    <th>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠</th>
                  </tr>
                </thead>
                <tbody>
                  <% (chat.latestUsers || []).forEach(u => { %>
                    <tr>
                      <td><strong><%= u.displayName %></strong></td>
                      <td><code><%= u.userId %></code></td>
                      <td>
                        <% if (u.status === 'granted') { %>
                          <span class="badge success">granted</span>
                        <% } else if (u.status === 'pending') { %>
                          <span class="badge warn">pending</span>
                        <% } else { %>
                          <span class="badge gray"><%= u.status %></span>
                        <% } %>
                      </td>
                      <td><%= u.updatedAt ? new Date(u.updatedAt).toLocaleString('th-TH') : '-' %></td>
                    </tr>
                  <% }) %>
                  <% if (!chat.latestUsers || chat.latestUsers.length === 0) { %>
                    <tr><td colspan="4" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</td></tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <div class="card glass logic-card">
          <div class="card-heading">
            <h3>Analytics Logic &amp; Pipelines</h3>
            <span class="muted">10 ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö</span>
          </div>
          <div class="logic-list">
            <ol>
              <% logicModules.forEach((module) => { %>
                <li>
                  <strong><%= module.name %></strong> ‚Äì <%= module.description %>
                  <pre><code><%= module.query %></code></pre>
                </li>
              <% }) %>
            </ol>
          </div>
        </div>

        <div class="card glass checklist-card">
          <div class="card-heading">
            <h3>Coverage Checklist</h3>
            <span class="muted">10 Analysis ¬∑ 10 Charts ¬∑ 10 Logics</span>
          </div>
          <% const checklist = {
               analysis: ['Customer Interaction Volume','Response Time Analysis','Topic/Intent Distribution','Sentiment Trend','Top Customers by Engagement','Keyword/Intent Heatmap','Agent Performance','Conversion Funnel','Customer Lifecycle/Retention','Escalation/Complaint Detection'],
               charts: ['Messages Time Series','Intent Stacked Bar','Sentiment Pie+Trend','Active Hours Heatmap','Top Keywords Cloud','Conversion Funnel','Agent Response Bar','Customer-Agent Network','Retention Cohort','Word Clouds by Sentiment'],
               logic: ['Intent Classification','Sentiment Analysis','Entity Extraction','User Profiling','Engagement Scoring','Response Efficiency','Conversation Clustering','Churn Prediction','Next Best Action','Anomaly Detection']
             }; %>
          <div class="checklist-columns">
            <div>
              <h4>Analysis</h4>
              <ul>
                <% checklist.analysis.forEach(item => { %>
                  <li>‚úÖ <%= item %></li>
                <% }) %>
              </ul>
            </div>
            <div>
              <h4>Charts</h4>
              <ul>
                <% checklist.charts.forEach(item => { %>
                  <li>‚úÖ <%= item %></li>
                <% }) %>
              </ul>
            </div>
            <div>
              <h4>Logic Pipelines</h4>
              <ul>
                <% checklist.logic.forEach(item => { %>
                  <li>‚úÖ <%= item %></li>
                <% }) %>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="summary-cards" data-dashboard-section="core classic">
      <article class="summary-card">
        <div class="summary-label">‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏£‡∏ß‡∏°</div>
        <div class="summary-value"><%= fmtTons(totals.totalTons, { max: 2 }) %><small>‡∏ï‡∏±‡∏ô</small></div>
        <span class="summary-foot">‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£</span>
      </article>
      <article class="summary-card">
        <div class="summary-label">BUY</div>
        <div class="summary-value"><%= fmtTons(totals.buyTons) %><small>‡∏ï‡∏±‡∏ô</small></div>
        <span class="summary-foot"><%= totals.totalTons ? ((totals.buyTons / totals.totalTons) * 100).toFixed(1) : 0 %>% ‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
      </article>
      <article class="summary-card">
        <div class="summary-label">SELL</div>
        <div class="summary-value"><%= fmtTons(totals.sellTons) %><small>‡∏ï‡∏±‡∏ô</small></div>
        <span class="summary-foot"><%= totals.totalTons ? ((totals.sellTons / totals.totalTons) * 100).toFixed(1) : 0 %>% ‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
      </article>
      <article class="summary-card">
        <div class="summary-label">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ LINE</div>
        <div class="summary-value"><%= fmtCount(chat.distinctUsers) %><small>‡∏Ñ‡∏ô</small></div>
        <span class="summary-foot"><%= fmtCount(chat.recentCount) %> ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</span>
      </article>
    </section>

    <section class="panel-block" id="map-overview" data-dashboard-section="core classic">
      <div
        class="dashboard-map-card"
        data-province-map
        data-map-payload='<%- provinceDataJSON %>'
        data-mapbox-token="<%= mapboxToken || '' %>">
        <div class="map-card-header">
          <span class="tag">Real-time map</span>
          <h3>‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</h3>
          <p>‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î <strong><%= fmtCount(provinceStats.totalLocations) %></strong> ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
        </div>
        <div class="map-card-body">
          <div class="map-card-figure <%= hasProvinceCoords ? 'has-data' : '' %>">
            <div class="map-placeholder">
              <img src="/static/img/Locations.png" alt="Locations illustration" />
            </div>
            <div class="province-map" data-map-canvas></div>
            <% if (hasProvinceCoords) { %>
              <div class="map-overlay">
                <div>
                  <span>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                  <strong><%= fmtCount(provinceStats.totalLocations) %></strong>
                </div>
                <div>
                  <span>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•</span>
                  <strong><%= fmtCount(provinceStats.provincesWithCoords) %></strong>
                </div>
              </div>
            <% } %>
            <% if (!hasProvinceCoords) { %>
              <div class="map-empty">
                <div class="map-empty__icon">üõ∞Ô∏è</div>
                <div class="map-empty__text">
                  <strong>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏¥‡∏Å‡∏±‡∏î</strong>
                  <span>‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ä‡∏£‡πå location ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</span>
                  <small>Tip: ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‚Äú‡πÅ‡∏ä‡∏£‡πå‡∏û‡∏¥‡∏Å‡∏±‡∏î‚Äù ‡πÉ‡∏ô LINE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö</small>
                </div>
              </div>
            <% } %>
          </div>
          <aside class="map-card-sidebar">
            <div class="map-stat">
              <span>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</span>
              <strong><%= fmtCount(provinceStats.uniqueUsers) %></strong>
            </div>
            <div class="map-stat">
              <span>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span>
              <strong><%= fmtCount(provinceStats.provincesWithCoords) %></strong>
              <small>‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î <%= fmtCount(provinceStats.totalProvinces) %></small>
            </div>
            <ul class="map-top-list">
              <% if (provinceTopList.length) { %>
                <% provinceTopList.forEach(function(item, idx){
                     const provinceName = (item.province || '').replace(/^‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î\s*/, '');
                %>
                  <li>
                    <span class="rank"><%= idx + 1 %></span>
                    <div>
                      <strong><%= provinceName || item.province %></strong>
                      <small><%= fmtCount(item.count) %> ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</small>
                    </div>
                  </li>
                <% }) %>
              <% } else { %>
                <li class="empty">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</li>
              <% } %>
            </ul>
            <% if (provinceStats.lastUpdatedAt) { %>
              <span class="map-updated">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î <%= new Date(provinceStats.lastUpdatedAt).toLocaleString('th-TH') %></span>
            <% } %>
          </aside>
        </div>
      </div>
    </section>

    <section class="panel-block" id="excel" data-dashboard-section="core classic">
      <div class="panel-heading">
        <div>
          <h2>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
          <p>‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</p>
        </div>
      </div>
      <div class="panel-body grid-2 gap-xl">
        <div class="card glass donut-card">
          <div class="card-heading">
            <h3>Top ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
            <span class="muted">‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 8 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</span>
          </div>
          <div class="donut-layout">
            <div class="donut-wrap" data-chart="product" data-chart-payload='<%- JSON.stringify(productChart || []) %>' data-chart-total="<%= productChartTotal %>">
              <canvas width="260" height="260"></canvas>
              <div class="donut-total">
                <span>‡∏£‡∏ß‡∏°</span>
                <strong><%= fmtTons(productChartTotal, { min: 0, max: 0 }) %></strong>
                <small>‡∏ï‡∏±‡∏ô</small>
              </div>
            </div>
            <div class="donut-legend">
              <% if (productChart && productChart.length) { %>
                <ul>
                  <% (productChart || []).forEach((item, idx) => { %>
                    <% const percent = productChartTotal ? Math.round((item.totalTons / productChartTotal) * 10000) / 100 : 0; %>
                    <% const qty = formatQuantity(item.product, '', item.totalTons); %>
                    <li>
                      <span class="donut-legend__dot" data-color-index="<%= idx %>"></span>
                      <div>
                        <strong><%= item.product %></strong>
                        <span><%= qty.formatted %> <span class="muted"><%= qty.unit %></span> ¬∑ <%= percent.toFixed(1) %>%</span>
                      </div>
                    </li>
                  <% }) %>
                </ul>
              <% } else { %>
                <p class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</p>
              <% } %>
            </div>
          </div>
        </div>
        <div class="card glass">
          <div class="card-heading">
            <h3>‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° 7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤</h3>
            <span class="muted">‡∏£‡∏ß‡∏°‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤</span>
          </div>
          <div class="table-scroll">
            <table class="table compact ghost">
              <thead>
                <tr>
                  <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                  <th class="right">‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ô</th>
                  <th class="right">BUY</th>
                  <th class="right">SELL</th>
                  <th class="right">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß</th>
                </tr>
              </thead>
              <tbody>
                <% (dailySeries || []).forEach(day => { %>
                  <tr>
                    <td><strong><%= day.date %></strong></td>
                    <td class="right"><%= fmtTons(day.totalTons) %></td>
                    <td class="right"><%= fmtTons(day.buyTons) %></td>
                    <td class="right"><%= fmtTons(day.sellTons) %></td>
                    <td class="right"><%= fmtCount(day.entryCount) %></td>
                  </tr>
                <% }) %>
                <% if (!dailySeries || dailySeries.length === 0) { %>
                  <tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</td></tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <div class="panel-body">
        <div class="card glass">
          <div class="card-heading">
            <h3>‡∏™‡∏£‡∏∏‡∏õ MIX ‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£</h3>
            <span class="muted">‡∏£‡∏ß‡∏° netWeight <strong><%= fmtTons(mixSummaryTotalTons || 0, { max: 2 }) %></strong> ‡∏ï‡∏±‡∏ô</span>
          </div>
          <div class="table-scroll">
            <table class="table compact ghost">
              <thead>
                <tr>
                  <th>‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ (Name)</th>
                  <th>‡∏£‡∏´‡∏±‡∏™</th>
                  <th>Mix</th>
                  <th class="right">‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì (‡∏ï‡∏±‡∏ô)</th>
                  <th class="right">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß</th>
                </tr>
              </thead>
              <tbody>
                <% if (mixSummary && mixSummary.length) { %>
                  <% mixSummary.forEach(item => { %>
                    <tr>
                      <td><strong><%= item.projectName %></strong></td>
                      <td><%= item.projectCode || '-' %></td>
                      <td><%= item.mixName || '-' %></td>
                      <td class="right"><%= fmtTons(item.totalNetWeightTons, { max: 2 }) %></td>
                      <td class="right"><%= fmtCount(item.entryCount) %></td>
                    </tr>
                  <% }) %>
                <% } else { %>
                  <tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å MIX</td></tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <div class="panel-body">
        <div class="card glass line-card" data-chart="daily-lines" data-chart-payload='<%- dailySeriesPayload %>'>
          <div class="card-heading">
            <h3>‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</h3>
            <span class="muted">‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Ç‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡∏≤‡∏≠‡∏≠‡∏Å (‡∏ï‡∏±‡∏ô)</span>
          </div>
          <div class="line-chart-wrap">
            <canvas height="220"></canvas>
          </div>
        </div>
      </div>
    </section>

    <section class="panel-block" id="companies" data-dashboard-section="core classic">
      <div class="panel-heading">
        <div>
          <h2>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</h2>
          <p>‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</p>
        </div>
      </div>
      <div class="panel-body grid-2 gap-xl">
        <div class="card glass">
          <div class="card-heading">
            <h3>‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì</h3>
          </div>
          <div class="table-scroll">
            <table class="table compact ghost">
              <thead>
                <tr>
                  <th>‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</th>
                  <th class="right">‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ô</th>
                  <th class="right">BUY</th>
                  <th class="right">SELL</th>
                  <th class="right">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß</th>
                  <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</th>
                </tr>
              </thead>
              <tbody>
                <% (companySummary || []).forEach(item => { %>
                  <tr>
                    <td><strong><%= item.name %></strong></td>
                    <td class="right"><%= fmtTons(item.totalTons) %></td>
                    <td class="right"><%= fmtTons(item.buyTons) %></td>
                    <td class="right"><%= fmtTons(item.sellTons) %></td>
                    <td class="right"><%= fmtCount(item.entryCount) %></td>
                    <td><%= item.latestDate || '-' %></td>
                  </tr>
                <% }) %>
                <% if (!companySummary || companySummary.length === 0) { %>
                  <tr><td colspan="6" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
        <div class="card glass">
          <div class="card-heading">
            <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</h3>
          </div>
          <div class="table-scroll">
            <table class="table compact ghost">
              <thead>
                <tr>
                  <th>‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</th>
                  <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                  <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                  <th>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                  <th class="right">‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì</th>
                  <th>‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                  <th>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠</th>
                </tr>
              </thead>
              <tbody>
                <% (latestRecords || []).forEach(rec => { %>
                  <% const qty = formatQuantity(rec.product, rec.unit, rec.weightTons); %>
                  <tr>
                    <td><strong><%= rec.companyId ? rec.companyId.name : (rec.sourceCompanyName || rec.sourceCompanyId || 'Unknown') %></strong></td>
                    <td><%= rec.dateStr %></td>
                    <td><%= rec.type || '-' %></td>
                    <td><%= rec.product || '-' %></td>
                    <td class="right"><%= qty.formatted %></td>
                    <td><%= qty.unit %></td>
                    <td><%= rec.createdAt ? new Date(rec.createdAt).toLocaleString('th-TH') : '-' %></td>
                  </tr>
                <% }) %>
                <% if (!latestRecords || latestRecords.length === 0) { %>
                  <tr><td colspan="7" class="muted">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</td></tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </section>

    <section class="panel-block" id="tools" data-dashboard-section="core classic">
      <div class="panel-heading">
        <div>
          <h2>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏î‡πà‡∏ß‡∏ô</h2>
          <p>‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö</p>
        </div>
      </div>
      <div class="panel-body quick-actions">
        <a class="action-card" href="/admin/upload">
          <span class="icon">‚§¥Ô∏è</span>
          <span>
            <strong>Upload Excel</strong>
            <em>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô</em>
          </span>
        </a>
        <a class="action-card" href="/admin/test">
          <span class="icon">üß™</span>
          <span>
            <strong>Test &amp; Send</strong>
            <em>‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß LINE</em>
          </span>
        </a>
        <a class="action-card" href="/admin/richmenu">
          <span class="icon">üß≠</span>
          <span>
            <strong>Rich Menu</strong>
            <em>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</em>
          </span>
        </a>
        <a class="action-card" href="/admin/tools/purge">
          <span class="icon">üóëÔ∏è</span>
          <span>
            <strong>Purge Data</strong>
            <em>‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</em>
          </span>
        </a>
        <a class="action-card" href="/admin/consents">
          <span class="icon">‚úÖ</span>
          <span>
            <strong>Consents</strong>
            <em>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</em>
          </span>
        </a>
      </div>
    </section>
  </div>
</div>

<script src="/static/js/dashboard_map.js"></script>
<script>
  (function () {
    const TAB_KEYS = ['core', 'behavior', 'classic'];
    const sections = Array.prototype.slice.call(document.querySelectorAll('[data-dashboard-section]'));
    const tabButtons = Array.prototype.slice.call(document.querySelectorAll('[data-dashboard-tab]'));
    const behaviorLink = document.querySelector('[data-tab-jump="behavior"]');

    function parseGroups(section) {
      return String(section.dataset.dashboardSection || '')
        .split(/\s+/)
        .map((s) => s.trim())
        .filter(Boolean);
    }

    function showTab(key) {
      const target = TAB_KEYS.includes(key) ? key : 'core';
      tabButtons.forEach((btn) => {
        btn.classList.toggle('is-active', btn.dataset.dashboardTab === target);
      });
      sections.forEach((section) => {
        const groups = parseGroups(section);
        const visible = target === 'classic' || groups.includes(target);
        section.classList.toggle('dashboard-tab-hidden', !visible);
      });
      try {
        window.localStorage.setItem('dashboard-tab', target);
      } catch (_) {
        /* ignore storage errors */
      }
    }

    tabButtons.forEach((btn) => {
      btn.addEventListener('click', (ev) => {
        ev.preventDefault();
        showTab(btn.dataset.dashboardTab);
      });
    });

    if (behaviorLink) {
      behaviorLink.addEventListener('click', (ev) => {
        ev.preventDefault();
        showTab('behavior');
        document.querySelector('#customer-insights')?.scrollIntoView({ behavior: 'smooth', block: 'start' });
      });
    }

    let initial = 'core';
    try {
      const stored = window.localStorage.getItem('dashboard-tab');
      if (TAB_KEYS.includes(stored)) initial = stored;
    } catch (_) {
      /* ignore storage errors */
    }
    showTab(initial);
  })();
</script>
