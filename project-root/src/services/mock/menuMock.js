// project-root/src/services/mock/menuMock.js
import { buildMockPOs } from '../../services/procurement/poMock.js';
import { buildPoStatusFlex } from '../../flex/poStatus.js';

function mulberry32(a) { return function () { let t = (a += 0x6d2b79f5); t = Math.imul(t ^ (t >>> 15), t | 1); t ^= t + Math.imul(t ^ (t >>> 7), t | 61); return ((t ^ (t >>> 14)) >>> 0) / 4294967296; }; }
function seeded(seed) { const r = mulberry32(seed >>> 0); return { next: () => r(), int: (min, max) => Math.floor(r() * (max - min + 1)) + min, pick: (arr) => arr[Math.floor(r() * arr.length)], }; }

export function buildPoStatusMockFlex(seed = Date.now()) {
  const list = buildMockPOs(10, 100000 + (seed % 1000000));
  return buildPoStatusFlex(list);
}

export function buildIoSummaryListFlex(type = 'today', seed = Date.now(), opts = {}) {
  // Backward/compat: allow boolean `true` to mean single mode
  const options = typeof opts === 'boolean' ? { single: opts } : (opts || {});
  const single = !!options.single;
  const pickedIndex = Number.isFinite(options.index) ? Math.max(0, Math.min(9, Number(options.index))) : null;

  const rnd = seeded(200000 + (seed % 1000000));
  const titleMap = { today: '‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (Mock)', yesterday: '‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô (Mock)', week: '‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ (Mock)', month: '‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ (Mock)' };
  const title = titleMap[type] || '‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô (Mock)';
  const bubbles = [];
  if (!single) {
    const header = { type: 'bubble', body: { type: 'box', layout: 'vertical', paddingAll: '16px', contents: [ { type: 'text', text: `üìä ${title}`, weight: 'bold', size: 'lg' }, { type: 'text', text: '‡∏£‡∏ß‡∏° 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', size: 'sm', color: '#64748b' } ] } };
    bubbles.push(header);
  }

  const buildItem = (i) => {
    // Scale volumes by range type
    let in1, in2, out;
    if (type === 'month') {
      in1 = rnd.int(3000, 9000);
      in2 = rnd.int(3000, 9000);
      out = rnd.int(10000, 30000);
    } else if (type === 'week') {
      in1 = rnd.int(400, 1500);
      in2 = rnd.int(400, 1500);
      out = rnd.int(1200, 4500);
    } else {
      // today / yesterday
      in1 = rnd.int(80, 320); // tons
      in2 = rnd.int(80, 320);
      out = rnd.int(200, 900);
    }
    const proj = rnd.pick(['‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏£‡∏≤‡∏à‡∏£ ‡∏ó‡∏•.12 ‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ', '‡∏ã‡πà‡∏≠‡∏°‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ú‡∏¥‡∏ß‡∏ó‡∏≤‡∏á ‡∏ó‡∏•.33 ‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ', '‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏∞‡∏û‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏¢‡∏Å', '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÑ‡∏´‡∏•‡πà‡∏ó‡∏≤‡∏á']);
    const loc1 = rnd.pick(['‡∏ó‡∏•.311', '‡∏ó‡∏•.1 (‡∏û‡∏´‡∏•‡πÇ‡∏¢‡∏ò‡∏¥‡∏ô)', '‡∏Å‡∏ó‡∏°. 3027', '‡∏ó‡∏•.34 ‡∏ö‡∏≤‡∏á‡∏ô‡∏≤-‡∏ï‡∏£‡∏≤‡∏î']);
    const loc2 = rnd.pick(['‡∏ï‡∏≠‡∏ô ‡∏ö‡πâ‡∏≤‡∏ô‡∏°‡πâ‡∏≤ ‚Äì ‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó', '‡∏ä‡πà‡∏ß‡∏á ‡∏Å‡∏°.35‚Äì37', '‡∏ï‡∏≠‡∏ô ‡∏ö‡∏≤‡∏á‡∏ô‡∏≤ ‚Äì ‡∏ö‡∏≤‡∏á‡∏õ‡∏π', '‡∏ï‡∏≠‡∏ô ‡∏ö‡∏≤‡∏á‡∏ö‡∏±‡∏ß‡∏ó‡∏≠‡∏á ‚Äì ‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ']);
    const span = `${rnd.int(1, 4)}.${rnd.int(100, 999)} ‡∏Å‡∏°. / ${rnd.int(12000, 45000).toLocaleString('th-TH')} ‡∏ï‡∏£.‡∏°.`;
    return {
      type: 'bubble',
      body: { type: 'box', layout: 'vertical', spacing: 'sm', paddingAll: '16px', contents: [
        { type: 'text', text: `#${i + 1} ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ö‡∏≠‡∏ó‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô`, size: 'sm', color: '#0f172a', weight: 'bold' },
        { type: 'text', text: 'üì• ‡∏Ç‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤ (‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö)', size: 'sm', color: '#64748b' },
        { type: 'text', text: `ü™® ‡∏´‡∏¥‡∏ô/‡∏ß‡∏±‡∏™‡∏î‡∏∏ A : ${in1.toLocaleString('th-TH')} ‡∏ï‡∏±‡∏ô`, size: 'sm' },
        { type: 'text', text: `üå´Ô∏è ‡∏ß‡∏±‡∏™‡∏î‡∏∏ B : ${in2.toLocaleString('th-TH')} ‡∏ï‡∏±‡∏ô`, size: 'sm' },
        { type: 'text', text: `‡∏£‡∏ß‡∏°‡∏Ç‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤ : ${(in1 + in2).toLocaleString('th-TH')} ‡∏ï‡∏±‡∏ô`, size: 'sm', weight: 'bold' },
        { type: 'separator', margin: 'md' },
        { type: 'text', text: 'üì§ ‡∏Ç‡∏≤‡∏≠‡∏≠‡∏Å', size: 'sm', color: '#64748b' },
        { type: 'text', text: `üõ£Ô∏è ‡πÅ‡∏≠‡∏™‡∏ü‡∏±‡∏•‡∏ï‡πå‡∏ï‡∏¥‡∏Å‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï : ${out.toLocaleString('th-TH')} ‡∏ï‡∏±‡∏ô`, size: 'sm' },
        { type: 'separator', margin: 'md' },
        { type: 'text', text: `‚û°Ô∏è ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£: ${proj}`, size: 'sm', wrap: true },
        { type: 'text', text: `üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${loc1}`, size: 'sm' },
        { type: 'text', text: loc2, size: 'xs', color: '#64748b' },
        { type: 'text', text: `üìè ${span}`, size: 'xs', color: '#64748b' },
      ] }, footer: { type: 'box', layout: 'horizontal', spacing: 'sm', contents: [
        { type: 'button', style: 'primary', action: { type: 'uri', label: '‡∏î‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°', uri: process.env.IO_MORE_URL || 'https://app.nilasolutions.co' } },
      ] } };
  };

  if (single) {
    const i = pickedIndex != null ? pickedIndex : (seed % 10);
    const bubble = buildItem(i);
    return { type: 'flex', altText: title, contents: bubble };
  }

  for (let i = 0; i < 10; i++) {
    bubbles.push(buildItem(i));
  }
  return { type: 'flex', altText: title, contents: { type: 'carousel', contents: bubbles } };
}

export default { buildPoStatusMockFlex, buildIoSummaryListFlex };
